package main

import (
	"fmt"
	"strings"
)

func main() {
	r301_pattern := []string{1: "-3.5,10.4,80", 2: "4.4,10.6,80", 3: "-6.4,9.5,80", 4: "-1.2,10.0,80", 5: "-5.3,7.6,80", 6: "-0.4,4.1,80", 7: "-1.8,3.3,80", 8: "-4.1,1.9,80", 9: "-2.4,3.3,80", 10: "-3.2,1.0,80", 11: "0.0,3.3,80", 12: "2.0,2.2,80", 13: "5.0,2.8,80", 14: "4.7,2.3,80", 15: "5.0,1.9,80", 16: "5.2,0.9,80", 17: "3.2,0.9,80", 18: "0.0,2.2,80", 19: "-1.1,4.2,80", 20: "-3.1,2.8,80", 21: "-3.6,1.3,80", 22: "-3.6,0.0,80", 23: "-2.6,1.4,80", 24: "-2.4,1.4,80", 25: "-3.0,0.0,80", 26: "0.0,0.0,80", 27: "0.0,0.0,80", 28: "0.0,0.0,80", 29: "0.0,0.0,80", 30: "0.0,0.0,80"}

	r99_pattern := []string{1: "-1.6,7,53", 2: "0.1,7.5,53", 3: "2.3,4.9,53", 4: "-1.8,10,53", 5: "-3.3,15.4,53", 6: "-6.3,12,53", 7: "-5.5,9.7,53", 8: "-2.5,10.8,53", 9: "0.2,11,52", 10: "2.3,6.8,52", 11: "4.5,5.3,52", 12: "0.9,5.1,52", 13: "1.6,9.5,52", 14: "-1.1,4,52", 15: "-4.9,1,52", 16: "-2.3,1.8,52", 17: "-4.5,0.5,52", 18: "4,1.3,52", 19: "0,0,52", 20: "2.5,0.7,52", 21: "3.5,0.7,52", 22: "4,4,52", 23: "3.5,0,52", 24: "4.6,0,52", 25: "2,0,52", 26: "2,0,52", 27: "-5,-4,52", 28: "-5,4,52", 29: "-5,-4,52", 30: "0,4,52"}

	alternator_pattern := []string{1: "0.0,14.4,109", 2: "0.0,13.0,109", 3: "0.0,15.8,109", 4: "0.0,13.9,109", 5: "0.0,15.6,109", 6: "0.0,15.6,109", 7: "-2.0,12.7,109", 8: "-2.0,7.3,109", 9: "-3.0,13.2,109", 10: "-3.0,6.6,109", 11: "-3.0,9.8,109", 12: "-2.0,1.2,109", 13: "-2.0,6.8,109", 14: "-2.0,4.6,109", 15: "-1.0,10.0,109", 16: "0.0,9.3,109", 17: "5.0,3.2,109", 18: "5.0,9.8,109", 19: "5.0,0.7,109", 20: "5.0,8.3,109", 21: "5.0,-0.2,109", 22: "5.0,7.1,109", 23: "5.0,1.7,109", 24: "5.0,7.6,109", 25: "5.0,-0.7,109", 26: "5.0,6.8,109", 27: "5.0,0.0,109"}

	re45_pattern := []string{1: "-0.7,12.6,112", 2: "-1.4,10.9,112", 3: "-6.1,11.2,112", 4: "-3.0,11.6,112", 5: "-4.1,9.9,112", 6: "-5.7,8.0,112", 7: "-5.9,7.1,112", 8: "-7.7,6.9,112", 9: "-7.2,6.2,112", 10: "-6.7,5.0,112", 11: "-4.7,5.1,112", 12: "1.0,6.4,112", 13: "-5.7,5.7,112", 14: "-3.4,5.1,112", 15: "-2.4,6.4,112", 16: "2.4,5.7,112", 17: "-3.1,4.7,142", 18: "0,1.3,142", 19: "0,3.4,147", 20: "0,4.1,147", 21: "0,2.4,147", 22: "0,4.1,147", 23: "0,0.0,147"}

	spitfire_pattern := []string{1: "3.0,18.2,110", 2: "1.5,4.8,110", 3: "9.6,9.6,110", 4: "6.3,7.0,110", 5: "3.3,6.2,110", 6: "-0.3,9.2,110", 7: "-4.5,2.6,110", 8: "-9.6,-2.0,110", 9: "-2.7,-1.6,110", 10: "-3.9,3.2,110", 11: "-2.7,6.6,110", 12: "4.5,2.0,110", 13: "9.9,4.4,110", 14: "5.1,1.4,110", 15: "9.6,-1.6,110", 16: "4.2,1.4,110", 17: "1.8,7.8,110", 18: "3.3,7.6,110", 19: "6.9,4.4,110", 20: "9.0,1.8,110", 21: "3.9,0.6,113", 22: "-1.2,5,113", 23: "-6.9,2.5,113", 24: "-4.5,2,113", 25: "-7.8,2.2,113", 26: "-8.1,1,113", 27: "-7.8,-1,113", 28: "-3.3,3.6,113", 29: "-4.5,4.2,113", 30: "-0.3,4.2,113", 31: "-9.6,-2.0,113", 32: "-2.7,-1.6,113", 33: "-3.9,2.2,113", 34: "-2.6,3,113", 35: "4.5,1.5,113", 36: "9.9,3.4,113", 37: "5.1,1.4,113", 38: "9.6,-1.6,113", 39: "4.2,1.4,113", 40: "1.8,7.8,113", 41: "3.3,7.6,113", 42: "6.9,4.4,113", 43: "9.0,1.8,113", 44: "3.9,0.6,113", 45: "-1.2,5.6,113", 46: "-6.9,3.2,113", 47: "-4.5,2.6,113", 48: "-7.8,3.2,113", 49: "-8.1,2.0,113", 50: "-7.8,-2.0,113", 51: "-3.3,4.6,113", 52: "-4.5,6.2,113", 53: "-0.3,6.2,113", 54: "-9.6,-2.0,113", 55: "-2.7,-1.6,113", 56: "-3.9,3.2,113", 57: "-2.7,6.6,113", 58: "4.5,2.0,113", 59: "9.9,4.4,113", 60: "5.1,1.4,113", 61: "9.6,-1.6,113"}

	volt_pattern := []string{1: "0.0,12.9,81", 2: "0.0,9.5,81", 3: "-1.5,11.3,81", 4: "-1.7,9.4,81", 5: "-1.7,11.1,81", 6: "-2.5,13.1,81", 7: "-2.5,9.7,81", 8: "-2,9.8,81", 9: "-2.5,9.2,81", 10: "-2.0,6.6,81", 11: "1.0,5.8,81", 12: "2.7,1.2,81", 13: "4.0,6.8,81", 14: "6.0,4,81", 15: "5.0,3.0,81", 16: "5.0,3.3,81", 17: "0.0,1.2,81", 18: "-2.0,1.8,81", 19: "-2.0,1.7,81", 20: "-2.0,5.3,81", 21: "3.0,0,81", 22: "1,0.0,81", 23: "1,7.0,81", 24: "1,0.0,81", 25: "1,0.0,81", 26: "1,0.0,81", 27: "1,0.0,81"}

	hemlok_pattern := []string{1: "0,0,40", 2: "0,8,40", 3: "0,8,40", 4: "0,1,50", 5: "0,1,50", 6: "0,1,50"}

	lstar_pattern := []string{1: "5,5,37", 2: "5,5,37", 3: "5,5,37", 4: "5,5,37", 5: "5,5,37", 6: "5,5,37", 7: "2,5,37", 8: "2,5,37", 9: "2,5,37", 10: "1,2,37", 11: "1,2,37", 12: "-2,2,37", 13: "-2,2,32", 14: "-2,2,32", 15: "-2,5,32", 16: "-2,5,42", 17: "-2,5,42", 18: "-2,5,42", 19: "-2,5,42", 20: "-2,5,42", 21: "-2,5,42", 22: "-2,5,42", 23: "-2,5,55", 24: "-1,5,55", 25: "-1,5,55", 26: "-1,5,55", 27: "-1,5,55", 28: "-1,5,60", 29: "-1,5,60", 30: "-1,5,60", 31: "-1,5,60", 32: "-1,5,60", 33: "-1,5,60", 34: "1,5,65", 35: "1,5,65", 36: "1,5,65", 37: "1,5,65", 38: "1,5,65", 39: "1,5,65", 40: "0,5,65", 41: "0,5,65", 42: "0,5,65", 43: "0,5,65", 44: "0,5,65", 45: "0,5,65"}

	havoc_pattern := []string{1: "0.0,0.0,460", 2: "-15,14.8,84", 3: "-5,14.9,84", 4: "5,13.4,84", 5: "5,11.8,84", 6: "5,11.0,84", 7: "2,11,84", 8: "2,14.1,84", 9: "2,10.1,65", 10: "-2,5.5,65", 11: "-2.4,5.2,65", 12: "-2.2,5,65", 13: "-2,1.5,65", 14: "-1,1.2,65", 15: "-1,1,65", 16: "-1.,1,65", 17: "-1.5,0.8,65", 18: "1.5,0.5,65", 19: "1.6,0.0,65", 20: "1.8,0.0,65", 21: "1.8,0.0,65", 22: "1.8,0.0,65", 23: "1.8,0.0,65", 24: "1.8,0.0,65", 25: "1,5,65", 26: "1.5,5.5,65", 27: "1.8,6,65", 28: "1.8,7,65", 29: "2.5,8,65", 30: "2.5,10,65", 31: "2.5,11,65", 32: "2.5,16,65", 33: "2.5,16,65"}

	prowler_pattern := []string{1: "0.0,0.0,10", 2: "-15,12.8,84", 3: "-5,12.9,84", 4: "0,11.4,84", 5: "3,9.8,84", 6: "4,9.0,84", 7: "4,9.1,84", 8: "2,12.1,84", 9: "-0.9,12.1,84", 10: "0,12.1,84", 11: "0,10.3,84", 12: "-2,6.4,84", 13: "-3.5,5.1,84", 14: "-4.0,3.1,84", 15: "-5.0,2.1,84", 16: "-5.4,2,83", 17: "-5.4,1.5,83", 18: "-4.0,5.4,83", 19: "-1.9,5,83", 20: "0,5,84", 21: "0,5,84", 22: "2.8,5.8,84", 23: "2.0,5.8,84", 24: "0.9,2.8,84", 25: "-0.9,5.5,84", 26: "-2.0,5.5,84", 27: "0.0,6,84", 28: "0.0,6.5,84", 29: "0.0,7,84", 30: "0.0,7,84", 31: "0.0,7,84", 32: "0.0,7,84", 33: "0.0,7,100"}

	devotion_pattern := []string{1: "0.0,0.0,40", 2: "0.8,24.5,180", 3: "0.3,20.0,170", 4: "0.3,23.5,140", 5: "2.0,23.2,120", 6: "3.1,19.5,100", 7: "2.8,12.6,85", 8: "2.8,10.6,85", 9: "6.2,4.8,85", 10: "2.8,6.4,85", 11: "3.1,5.8,68", 12: "4.8,7.1,68", 13: "5.0,4.4,68", 14: "6.2,2.3,68", 15: "7.6,1.8,68", 16: "7.0,0.5,68", 17: "4.2,-1.6,68", 18: "6.2,1.6,68", 19: "-1.4,4.6,68", 20: "0.0,5.3,66", 21: "-3.9,3.9,66", 22: "-4.5,2.3,66", 23: "-4.5,2.5,66", 24: "-6.7,3.0,66", 25: "-7.0,3.0,66", 26: "-3.1,3.2,66", 27: "1.7,3.7,66", 28: "-1.4,4.8,66", 29: "-3.6,4.4,66", 30: "-5.0,3.5,70", 31: "-6.2,2.1,70", 32: "-5.6,-0.5,70", 33: "-5.6,-0.5,70", 34: "-4.8,3.7,70", 35: "-4.8,3.7,67", 36: "-0.8,4.1,67", 37: "-2.8,3.5,67", 38: "2.0,3.5,67", 39: "2.0,3.5,66", 40: "-1.4,3.7,67", 41: "-1.4,2.8,67", 42: "-3.6,1.6,67", 43: "-1.4,2.3,67", 44: "0.0,3.0,67", 45: "3.6,1.8,67"}

	taabodevotion_pattern := []string{1: "0.0,0.0,40", 2: "0.8,24.5,140", 3: "0.3,20.0,140", 4: "0.3,23.5,140", 5: "2.0,23.2,100", 6: "3.1,19.5,100", 7: "2.8,12.6,100", 8: "2.8,10.6,100", 9: "6.2,4.8,100", 10: "2.8,6.4,88", 11: "3.1,5.8,88", 12: "4.8,7.1,88", 13: "5.0,4.4,88", 14: "6.2,2.3,88", 15: "7.6,10.8,86", 16: "7.0,0.5,86", 17: "4.2,-1.6,86", 18: "6.2,1.6,86", 19: "-1.4,4.6,86", 20: "0.0,5.3,86", 21: "-3.9,3.9,86", 22: "-4.5,2.3,86", 23: "-4.5,2.5,86", 24: "-6.7,3.0,86", 25: "-7.0,3.0,86", 26: "-3.1,3.2,86", 27: "1.7,3.7,86", 28: "-1.4,4.8,86", 29: "-3.6,4.4,86", 30: "-5.0,3.5,88", 31: "-6.2,2.1,88", 32: "-5.6,-0.5,88", 33: "-5.6,-0.5,88", 34: "-4.8,3.7,88", 35: "-4.8,3.7,87", 36: "-0.8,4.1,87", 37: "-2.8,3.5,87", 38: "2.0,3.5,87", 39: "2.0,3.5,86", 40: "-1.4,3.7,86", 41: "-1.4,2.8,86", 42: "-3.6,1.6,86", 43: "-1.4,2.3,86", 44: "0.0,3.0,87", 45: "0.0,0.0,120"}

	flatline_pattern := []string{1: "3.0,15.2,110", 2: "1.5,5.3,110", 3: "9.6,10.1,110", 4: "6.3,7.5,110", 5: "3.3,9.7,110", 6: "-1.3,9.7,110", 7: "-4.5,2.6,110", 8: "-10.6,-2.0,110", 9: "-2.7,-1.3,110", 10: "-3.9,3.5,110", 11: "-1.7,6.6,110", 12: "4.5,2.0,110", 13: "9.9,4.4,110", 14: "5.1,1.9,110", 15: "9.6,-1.6,110", 16: "4.2,2.1,110", 17: "1.8,8.3,110", 18: "3.3,8.1,110", 19: "6.9,4.9,110", 20: "9.0,2.3,110", 21: "3.9,0.6,113", 22: "-1.2,5,113", 23: "-7.9,2.5,113", 24: "-5.5,2,113", 25: "-8.8,2.2,113", 26: "-9.1,1.5,113", 27: "-8.8,1,113"}

	fmt.Println(parse("R301_PATTERN", r301_pattern))
	fmt.Println(parse("R99_PATTERN", r99_pattern))
	fmt.Println(parse("LSTAR_PATTERN", lstar_pattern))
	fmt.Println(parse("DEVOTION_PATTERN", devotion_pattern))
	fmt.Println(parse("VOLT_PATTERN", volt_pattern))
	fmt.Println(parse("HAVOC_PATTERN", havoc_pattern))
	fmt.Println(parse("FLATLINE_PATTERN", flatline_pattern))
	fmt.Println(parse("PROWLER_PATTERN", prowler_pattern))
	fmt.Println(parse("HEMLOK_PATTERN", hemlok_pattern))
	fmt.Println(parse("SPITFIRE_PATTERN", spitfire_pattern))
	fmt.Println(parse("ALTERNATOR_PATTERN", alternator_pattern))
	fmt.Println(parse("RE45_PATTERN", re45_pattern))
	fmt.Println(parse("TURBODEVOTION_PATTERN", taabodevotion_pattern))
}

func parse(name string, oldPattern []string) (newPattern string) {
	newPattern = "global " + name + " := ["
	for i := 1; i < len(oldPattern); i++ {
		pattern := strings.Split(oldPattern[i], ",")
		newPattern += fmt.Sprintf("[%s, %s, %s]", pattern[0], pattern[1], pattern[2])
		if i%5 == 0 {
			newPattern += "\n"
		}
		if i != len(oldPattern)-1 {
			newPattern += ", "
		}
	}
	newPattern += "]"
	return newPattern
}
